<html>
    
    <head>
        <link href="mystyles.css" rel="stylesheet">
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="data_1_1_1copy.json"></script>
    
    </head>
    <!-- <body> -->
    <style>
        body {
            background-image: linear-gradient(slateblue, steelblue, darkcyan, mediumturquoise, aqua, deepskyblue, blue);
            height: 1000px;
        }
        gameCanvas {
            border:1px solid #d3d3d3;
            background-color: #f1f1f1;
        }
        myCanvas {
            background-color: aqua;
        }
        button {
            border-radius: 8px;
            border-color: aqua;
            font-size: 20px;
             box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
            border-width: 5px;
        }
        
    </style>
    
    <body>
        <div class="topnav">
        <a href="index.html">Home</a>
        <a href="about.html">Animals Affected</a>
        <a class="active" href="contact.html">What can we do?</a>
        </div>
        <centre>
        <h1>Percent of coastal protection around the world by the years</h1>
        </centre>
        <div class="row">
            <div class="col">
                <div id="mydata"></div>
                <canvas id="myCanvas" width="700" height="1200" ></canvas>
            </div>
            <div class="col">
                <canvas id="gameCanvas" width="300" height="150"></canvas>
                <body onload="startGame()"></body>
                <button onmousedown="accelerate(-0.2)" onmouseup="accelerate(0.05)">swim</button>
                <p>you are the orange fish, use the SWIM button to avoid the garbage</p>
                <!-- <body onload="startGame()"> -->
            </div>
        </div>
    </body>
    <script>
        drawChallenge();
        function drawChallenge() {
            var c = document.getElementById("myCanvas");
            var ctx = c.getContext("2d");
            ctx.font = "20px Arial";
            mycolors = ["slateblue","mediumslateblue","steelblue","cadetblue","lightseagreen","darkcyan","teal","mediumaquamarine","turquoise","mediumturquoise","darkturquoise","cyan","aqua","lightskyblue","deepskyblue","dodgerblue","royalblue","blue","mediumblue",];
            mynums = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,];
            barY = 0;
            textY = 35;
            Yinc = 60;
            for (num = 0; num < mycolors.length; num++) {
                ctx.fillStyle = mycolors[num];
                ctx.fillRect(10,barY,data[mynums[num]]['Value'] * 30,50);
                ctx.fillStyle = "white";
                ctx.fillText(data[mynums[num]]["TimePeriod"] + ": " + data[mynums[num]]['Value'] + "%", 15,textY)
                barY = barY + Yinc;
                textY = textY + Yinc;
            }
        }
    </script>
    <script>
        var myGamePiece;
        var myObstacles = [];
        var myScore;

       function startGame() {
    myGamePiece = new component(30, 30, "swimfish.png", 10, 120, "image");
    myGamePiece.gravity = 1;
    myScore = new component("30px", "Consolas", "black", 280, 40, "text");
    myGameArea.start();
}


        var myGameArea = {
            // canvas : document.createElement("canvas"),
            canvas : document.getElementById("gameCanvas"),
            start : function() {
                this.canvas.width = 480;
                this.canvas.height = 270;
                this.canvas.fillstyle = "orange";
                this.context = this.canvas.getContext("2d");
                // document.body.insertBefore(this.canvas, document.body.childNodes[0]);
                this.frameNo = 0;
                this.interval = setInterval(updateGameArea, 20);
                },
            clear : function() {
                this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
            }
        }

        function component(width, height, color, x, y, type) {
            this.type = type;
            this.score = 0;
            this.width = width;
            this.height = height;
            this.speedX = 0;
            this.speedY = 0;    
            this.x = x;
            this.y = y;
            this.gravity = 0;
            this.gravitySpeed = 0;
            this.update = function() {
                ctx = myGameArea.context;
                if (this.type == "text") {
                    ctx.font = this.width + " " + this.height;
                    ctx.fillStyle = "orange";
                    ctx.fillText(this.text, this.x, this.y);
                } else {
                    ctx.fillStyle = color;
                    ctx.fillRect(this.x, this.y, this.width, this.height);
                }
            }
            this.newPos = function() {
                this.gravitySpeed += this.gravity;
                this.x += this.speedX;
                this.y += this.speedY + this.gravitySpeed;
                this.hitBottom();
            }
            this.hitBottom = function() {
                var rockbottom = myGameArea.canvas.height - this.height;
                if (this.y > rockbottom) {
                    this.y = rockbottom;
                    this.gravitySpeed = 0;
                }
            }
            this.crashWith = function(otherobj) {
                var myleft = this.x;
                var myright = this.x + (this.width);
                var mytop = this.y;
                var mybottom = this.y + (this.height);
                var otherleft = otherobj.x;
                var otherright = otherobj.x + (otherobj.width);
                var othertop = otherobj.y;
                var otherbottom = otherobj.y + (otherobj.height);
                var crash = true;
                if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {
                    crash = false;
                }
                return crash;
            }
        }

        function updateGameArea() {
            var x, height, gap, minHeight, maxHeight, minGap, maxGap;
            for (i = 0; i < myObstacles.length; i += 1) {
                if (myGamePiece.crashWith(myObstacles[i])) {
                    return;
                } 
            }
            myGameArea.clear();
            myGameArea.frameNo += 1;
            if (myGameArea.frameNo == 1 || everyinterval(150)) {
                x = myGameArea.canvas.width;
                minHeight = 20;
                maxHeight = 200;
                height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
                minGap = 50;
                maxGap = 200;
                gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
                myObstacles.push(new component(10, height, "grey", x, 0));
                myObstacles.push(new component(10, x - height - gap, "grey", x, height + gap));
            }
            for (i = 0; i < myObstacles.length; i += 1) {
                myObstacles[i].x += -1;
                myObstacles[i].update();
            }
            myScore.text="SCORE: " + myGameArea.frameNo;
            myScore.update();
            myGamePiece.newPos();
            myGamePiece.update();
        }

        function everyinterval(n) {
            if ((myGameArea.frameNo / n) % 1 == 0) {return true;}
            return false;
        }

        function accelerate(n) {
            myGamePiece.gravity = n;
        }
</script>
</html>
